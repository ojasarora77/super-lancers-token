{
    "name": "Lending",
    "functions": [
        {
            "name": "_borrow",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "_deposit",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "collateral_asset",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "_repay",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "stable_coin",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "_withdraw",
            "functionType": "open",
            "isInternal": true,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "recipient",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "borrow_private",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "secret",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "borrow_public",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "constructor",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [],
            "bytecode": "H4sIAAAAAAAA/+XdZZOTZxSH8V0gSd27uLu1ySbZJFVK3alSL6Rk6y1V6qXU3XB390/IuWbCwAt4xb0z3HNl5j9590x+m+yj5z7nZE9Pz7aeM6/e7vuC7nv5wl6VQmyjcI7tVssDtVqn0d+pVCtLy/2tdrNertXbA81Ks1Jv1pf1N6vVTrPWbLTarUa5ValVO5XBeqs62N1wId1nLA+FuxjbKA6Bu3iRu0uxjdIQuEuJ3ef7vV/o5xw5RJ9zWOLvqTeheVQm5mEJzaMzMQ9PaB6TiXlEQvPYTMyFhOZxmZiLCc3jMzGXEponZGIemdA8UWieJDRPFpqnCM1TheZpQvN0oXmG0DxTaJ4lNM8WmucIzXOF5nlC83yh+Sah+WahuSw0V4TmfqG5KjTXhOa60DwgNDeE5qbQ3BKabxGabxWabxOabxea7xCa7xSaFwjNdwnNC4Xmu4Xme4Tme4Xm+4Tm+4XmB4TmB4Xmh4Tmh4XmR4TmR4Xmx4Tmx4XmRULzE0Lzk0LzU0Lz00LzM0Lzs0LzYqH5OaH5eaH5BaH5RaH5JaH5ZaH5FaH5VaF5idC8VGhuC82vCc3LhOaO0DwoNL8uNL8hNL8pNL8lNL8tNL8jNL8rNL8nNL8vNC8Xmj8Qmj8Umj8Smj8Wmj8Rmj8VmlcIzZ8JzZ8LzV8IzV8KzV8JzV8Lzd8Izd8KzSuF5u+E5lVC8/dC8w9C849C809C889C8y9C869C829C8+9C8x9C859C819C899C8z9C879C839C8/9C82qheY3QvFZoXic0rxeaNwjNG4XmTULzZqF5i9C8VWjeJjRvF5p3CM07heZdmZgvSWjenYn50oTmPZmYL0to3puJ+fKE5n2ZmK9IaN6fifnKhOYDmZivSmg+mIn56oTmQ5mYr0loPpyJ+dqE5iOZmK9LaD6aifn6hOZjmZhvSGg+non5xoTmE5mY+xKaTyY093W309s1D4+MiBQixUgpwjUh10hcM3AOzTkl51icc3AM5pjEPpp9Fv/D/Kb5jvvO+ntu6r6PioyOjImMjYyLjI9MiEyMTIpMjkyJTI1Mi0yPzIjMjMyKzI7MicyNzIvMjzDjnpnvfInMBGdGNjOjmaHMTGFm7DYizGBlJikzOplZyQxHZhoy4+/0zDtmoi2MMDOLGVLMVGLGEDN3mEHDTBZmlDCzgxkWzHRgxgE9/xdF6AlPj3R6htNDm57S9FheHKEHLz1p6dFKz1J6eNLTkh6P9DxcEqEnXjtCzzR6iNFTix5T9FyiBxE9eehRQ88WepjQ04MeF/R8WB6hJwBr5Fkzzhpq1hSzxnZFhDWYrElkjR5r1ljDxZom1viw5mVlhDURqyLUzFNDTk01NcbU3FKDSk0mNYrU7FHDRk0XNU7U/FADQ00INRLUDPAMnWfKPGPlmSPP4HgmxTMafhPcw+eeNvd4uee5PcI9Me4Rcc+EewhcU3ONyTUX1yCck3OOyjkb5zAc0znGsc9nH8g+gf+R069TXMw0LzyaAAA=",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "deposit_private",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "from",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "secret",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "on_behalf_of",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "collateral_asset",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "deposit_public",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "on_behalf_of",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "collateral_asset",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "get_asset",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "assetId",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "asset::Asset",
                    "fields": [
                        {
                            "name": "interest_accumulator",
                            "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 120
                            }
                        },
                        {
                            "name": "last_updated_ts",
                            "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 120
                            }
                        },
                        {
                            "name": "loan_to_value",
                            "type": {
                                "kind": "integer",
                                "sign": "unsigned",
                                "width": 120
                            }
                        },
                        {
                            "name": "oracle_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "H4sIAAAAAAAA/82X3U7CQBCFt0CLIKIoij+YrC9ACnLpRd/ARC+8JgG9AUlojT6+bNmJH5vGmLANTgI7nd3OOWcGuttQKRWojVXh0ySW2DHezYaBv1xxDTwr0GFM5sL158X6DawTi+AnnnhF/usWh5a/wkjdDbXdS1dvDbEqamOsbetQ88t5RCwx9zeWwBf8CNw8ccl7EvnNeW9y1MHfresh5iOMdb888v9UqLZrKtfk91eulT1zLav/B35zjlo2p9TywKkp9TQ96zE55DlQA1YTmK0SendocwX2IxgN4B6VgNtCbclDsKpYc4c5Wef2o4za0BL4gkUuwZ65cL9QiLWcWnEPYQ8eMd+2fqUgT7tgHbUfl6CdOAmuBasJDu1/wKVewOXEL5f8edFRPyb9OQEP4dQBj1PPPAKHxxdwT4F75rkXJke3QP8Z9At+FzzO/fLI9Xcd/YJ7DtwLv7gjk6NXoP8C+gW/Bx6Xfnnk+nuOfsG9BO6VX9z8rHZdoP8K+gVf1jXgdxC7sX4Xsb5TOxO7dXTxWUoMOT/cICZn4T5icq6QvOa5EeH+xI7xbjYu4fw1piax3/YpwTdnKtk302y5mrzNnmaTaYAUklZGvuLR52tR5NzD1shcXRW8Eid2jHezIQWoAgFVex1iDddqOz7Y8XlTG53Ol5mO9fv6ezKfLz9n04HmXKoXH2mm02yyyvTrarnQw8E3IQoYewgQAAA=",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "get_assets",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [
                {
                    "kind": "array",
                    "length": 2,
                    "type": {
                        "kind": "field"
                    }
                }
            ],
            "bytecode": "H4sIAAAAAAAA/8WWzU7DMAyA07RpSNZ1rzJ25pADT8AbTGLiiAS8v6ClVj9MhpCWqL40P4792YobW2NMY76lNas0+Fo1flzmPfTT8j3eKD18l7Lpvmy4xVYAs8Q1LrHYsn7vd5l89shzKT+N+SkJ4xZxa72AfYs1q85OuXvAfpc5I7pdRo+xuwqx00/CXHxFMHRg6cuyHCcb3qzSwpdwCJPHni/LceK9c/BzVyH3lISx+LpWA1uwXKsB2fdYs+qsrgH5j9iMnZDRY+yxQuz0kzCP+DaKb0sWl2HZlWWZ63Ewq+g7GcE0gGNfluMUFIfkhpIw3oNlLMsy5+QAX8I1Ijeyz3/HoSzHfE9GFb/Myfdf1rgxa8DagDX2GJN4U6cHqPG28g0X+eveiv+pzqTG3j9e384vl6fL+ZktpW4NLMxwzPZFnlG2GKIre978RiyWD21X98Uin3yQBtFUCwAA",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "get_position",
            "functionType": "unconstrained",
            "isInternal": false,
            "parameters": [
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "Lending::Position",
                    "fields": [
                        {
                            "name": "collateral",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "static_debt",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "debt",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "H4sIAAAAAAAA/+2dD7xlVVXH33nvnZnZs5kxMzMz8qGZmQlv9sxICORDQiRFEiRFMh1hIBOcnBlkzEzNTMnMzMzMFEiRFEmRFAkQFUmRFMnMzCx1LGJQwEL+6aCzzt0/+M2aPfvD+7iW983n7fX54N373Lv397vWOvfec94bZ6YnJia6iVFM0ZgDx+by4+wPFqs6u71mp8hzkvKQmN7x35HLRuNAzyOW0HjOyGeJfb1m+x175DSGPHS+QfVQ5zudH1fmnKdt/VIgLkKfR3M0nqb697Yus2Hinr5OEWepLWc4h/X5gzlYkRx6R5dYYDtwUlA5S9T6DL6sW0ZeeAzGdeiIg331+4Zr1Tu6xALbgZOCylmi1pNAj8vzmHsTjevQEQf7Yh7pEQ69o0sssB04KaicJWo9AV/W7ZXHy8lvhXEdOuJgX8xXkBMcekeXWGA7cFJQOUvUesIuK21dhu+o++S99iLOjxjXtiMO9sUcLK7/SkeXWGA7cFJQOUvU+gy+rLtvHt+H/H7UuA4dcbAv5mBxrVY6usQC24GTgspZotYT8GXd/fL4vuT3Y8Z16IiDfTEHi2u10tElFtgOnBRUzhK1noAv6+6fx/cjvx83rkNHHOyLOVhcq97RJRbYDpwUVM4StZ6AL+sekMf3J7+fMK5DRxzsizlYXKve0SUW2A6cFFTOErWegC/rHpjHDyC/nzSuQ0cc7Is5WFyr3tElFtgOnBRUzhK1noAv6x6Uxw8kv58yrkNHHOyLOVhcq97RJRbYDpwUVM4StZ6AL+v2zuMHkd9PG9ehIw72xRwsrlXv6BILbAdOCipniVpPwJd1D87jvclvxrgOHXGwL+Zgca16R5dYYDtwEtcWUevJTH6Udfvk8YPJ7yHGdeiIg30xB4tr1Tu6xALbgZOCylmi1hPwZd1D83gf8vsZ4zp0xMG+mIPFteodXWKB7cBJQeUsUesJ+LLuYXn8UPL7WeM6dMTBvpiDxbXqHV1ige3ASUHlLFHrCfiy7uF5/DDy+znjOnTEwb6Yg8W16h1dYoHtwElB5SxR6wn4su4Refxw8vt54zp0xMG+mIPFteodXWKB7cBJQeUsUesJ+LLukXn8CPL7BeM6dMTBvpiDxbXqHV1ige3ASUHlLFHrCbvsa+uyRlweNQ+XfcllP1uX2WEPYsELnEjP83kwa+sxnJP7qfwxZ7/murhdAx175Jhd+LPrUX4ua2KB7cBJQeUsUftc4p6syuP9yC/Z+g09WaVcMAeLa9U7usQC24GTgspZotYTdllj6rJ6+L316nm4rCGXtaYuo++tRxMLXuBEep7Pg0fbegzn5FqVP+bs11yba3Ntrs21uTbX5tpcm2tzba7Ntbk21+baXJtrc22uzbW5Ntfm2lyba3Ntrs21uTZXe9dAx1aN2YX/LMlqN5fVs7HAdsg5BZWzRO3PiXBP9s/jteT3i7Z+Q0/2Vy6Yg8W16h1dYoHtwElB5SxR6wm7PMbUJQ1/juiAebg8hlwONHUZ/Tmig4gFL3AiPc/nwUG2HsM5eaDKH3P2a67Ntbk21+baXJtrc22uzbW5Ntfm2lyba3Ntrs21uTbXPcU10LH9x+zCP4s/wM0lDb+H0WyHnFNQOUvUfs7OPTk4jw8kv1+y9Rt6crBywRwsrlXv6BILbAdOCipniVpP2GXO1mX4e0geOw+XOXI5xNZl+D3M44gFL3AiPc/nweNsPYZz8hCVM+bs11wXt2ugYweP2YU/ux7r5zL8PSSa7cBJQeUsUftc4p4cmseHkN8v2/oNPTlUuWAOFteqd3SJBbYDJwWVs0StJ+zyeFOXVcOfHzhsHi6PJ5fDTV1G31tPIBa8wIn0PJ8HT7D1GM7Jw1X+mLNfc22uzbW5Ntfm2lyba3Nd3K6Bjh06Zhe+lznMzWXV8PNXzXbIOQWVs0TtPoV7ckQeH05+v2LrN/TkCOWCOVhcq97RJRbYDpwUVM4StZ6wy5NMXUb3sU+ch8uTyOVIU5fRfeyTiQUvcCI9z+fBk209hnPySJU/5uzXXJtrc22uzbW5Ntfm2lwXt2ugY0eM2YXvZZ7o5jK6j9Vsh5xTUDlL1O5TuCdH5fGR5Pertn5DT45SLpiDxbXqHV1ige3ASUHlLFHrCbsc7eDylHm4HE0ux9i6DPexTyUWvMCJ9DyfB0+19RjOyWNU/piz357iGujYUWN24ffYU/xcUiywPThB5SxRe/9wT47N42PI79ds/YaeHKtcMAeLa9U7usQC24GTgspZotYTdnm6g8vT5uHydHI5ztZl+Hx9BrHgBU6k5/k8eIatx3BOHqfyx5z99hTXQMeOHbMLv8ee5ucyfL5qtgcnqJwlau8f7snxeXwc+f26rd/Qk+OVC+Zgca16R5dYYDtwUlA5S9R6Ar6se2YeH09+v2Fch4442BdzsLhWvaNLLLAdOCmonCVqPQFf1j0rj59Jfs82rkNHHOyLOVhcq97RJRbYDpzEtUXUevLs/Cjr1uXxs8jvOcZ16IiDfTEHi2vVO7rEAtuBk4LKWaLWE/Bl3Ql5vI78TjSuQ0cc7Is5WFyr3tElFtgOnBRUzhK1noAv69bn8Qnkd5JxHTriYF/MweJa9Y4uscB24KSgcpao9QR8WXdyHq8nv980rkNHHOyLOVhcq97RJRbYDpwUVM4StZ6AL+uem8cnk99vGdehIw72xRwsrlXv6BILbAdOCipniVpPwJd1z8vj55LfKcZ16IiDfTEHi2vVO7rEAtuBk4LKWaLWE/Bl3al5/Dzye75xHTriYF/MweJa9Y4uscB24KSgcpao9QR8Wbchj08lv982rkNHHOyLOVhcq97RJRbYDpwUVM4StZ6AL+tekMcbyG+jcR064mBfzMHiWvWOLrHAduCkoHKWqPUEfFm3KY9fQH6bjevQEQf7Yg4W16p3dIkFtgMnBZWzRK0n4Mu60/J4E/m90LgOHXGwL+Zgca16R5dYYDtwUlA5S9R6Ar6sOz2PTyO/LcZ16IiDfTEHi2u10tElFtgOnBRUzhK1noAv616Ux6eT3+8Y16EjDvbFHCyu1UpHl1hgO3BSUDlL1HoCvqx7cR6/iPx+17gOHXGwL+Zgca1WOrrEAtuBk4LKWaLWE/Bl3Uvy+MXk93vGdeiIg30xB4tr1Tu6xALbgZOCylmi1hPwZd1L8/gl5Pcy4zp0xMG+mIPFteodXWKB7cBJXFtErScvy4+y7uV5/FLy+33jOnTEwb6Yg8W16h1dYoHtwElB5SxR6wn4su4Vefxy8vsD4zp0xMG+mIPFteodXWKB7cBJQeUsUesJ+LLulXn8CvL7Q+M6dMTBvpiDxbXqHV1ige3ASUHlLFHrCfiy7lV5/Erye7VxHTriYF/MweJa9Y4uscB24KSgcpao9QR8WXdGHr+K/P7IuA4dcbAv5mBxrXpHl1hgO3BSUDlL1HoCvqx7TR6fQX5/bFyHjjjYF3OwuFa9o0sssB04KaicJWo9AV/WvTaPX0N+f2Jch4442BdzsLhWvaNLLLAdOCmonCVqPQFf1r0uj19Lfn9qXIeOONgXc7C4Vr2jSyywHTgpqJwlaj0BX9a9Po9fR35/ZlyHjjjYF3OwuFa9o0sssB04KaicJWo9AV/WvSGPX09+f25ch4442BdzsLhWvaNLLLAdOCmonCVqPQFf1r0xj99Afn9hXIeOONgXc7C4Vr2jSyywHTgpqJwlaj0BX9a9KY/fSH5/aVyHjjjYF3OwuFa9o0sssB04KaicJWo9AV/WvTmP30R+f2Vch4442BdzsLhWvaNLLLAdOCmonCVqPQFf1r0lj99Mfn9tXIeOONgXc7C4Vr2jSyywHTgpqJwlaj1hl7fZugz/DsNb5+HyNnI509Zl+P/3nUUseIET6Xk+D86y9RjOyTNV/pifRceb6+J2DXTsLWN24c+ut/q5DP8Og2Y7cBLXFlH7XDorP8q6s/P4TPL7G1u/oSdnKxfMweJa9Y4uscB24KSgcpao9YRd3mHqkoa/v/Lt83B5B7mcY+oy+t56J7HgBU6k5/k8eKetx3BOnqPyx5z9mmtzba7Ntbk21+baXJtrc22uzbW5Ntfm2lyba3Ntrs11T3ENdOzsMbvwz+Lf7uaShr9/XbMdck5B5SxR+zk79+TcPD6H/P7W1m/oybnKBXOwuFa9o0sssB04KaicJWo9YZd3m7qMfg/zrnm4vJtczjN1Gf0e5j3Eghc4kZ7n8+A9th7DOXmeyh9z9muuzbW5Ntfm2lyba3Ntrs21uTbX5tpcm2tzba7Ntbk21z3FNdCxc8fsEsnhXW4uo9/DaLZDzimonCVqP2fnnpyfx+eR39/Z+g09OV+5YA4W16p3dBGOZjtwEtcWUesJu7zP1GXV8HuY987D5X3kcoGpy+j3MO8nFrzAifQ8nwfvt/UYzskLVP6Ys19zba7Ntbk21+baXJtrc13croGOnT9mF76Xea+by6rhPlazHXJOQeUsUbtP4Z5cmMcXkN/f2/oNPblQuWAOFteqd3SJBbYDJwWVs0StJ+zyQVOX0X3sB+bh8kFyucjUZXQf+yFiwQucSM/zefAhW4/hnLxI5Y85+zXX5tpcm2tzba7Ntbk218XtGujYhWN24XuZD7i5jO5jNdsh5xRUzhK1+xTuycV5fBH5/YOt39CTi5UL5mBxrXpHl1hgO3BSUDlL1HrCLpeauozuYy+Zh8ul5HKZqcvoPvbDxIIXOJGe5/Pgw7Yewzl5mcofc/Zrrs21uTbX5tpcm2tzba6L2zXQsYvH7ML3Mpe4uYzuYzXbIecUVM4StfsU7snleXwZ+X3E1m/oyeXKBXOwuFa9o0sssB04iWuLqPXkI+TyMVuX4d+H+eg8XD5GLlfYugz3sR8nFrzAifQ8nwcft/UYzskrVP6Ys19zXdyugY5dPmYX/uz6qJ/L8O/DaLYDJwWVs0Ttc4l7cmUeX0F+/2jrN/TkSuWCOVhcq97RJRbYDpwUVM4StZ6wyydtXYbvrU/Mw+WT5HKVrcvwvfUpYsELnEjP83nwKVuP4Zy8SuWPOfs118XtGujYlWN24c+uT/i5DN9bmu3ASUHlLFH7XOKeXJ3HV5HfP9n6DT25WrlgDhbXqnd0iQW2AycFlbNErSfs8hkHl0/Pw+Uz5HKNrcvwvfVZYsELnEjP83nwWVuP4Zy8RuWPOfvtKa6Bjl09Zhd+j33azyXFAtuDE1TOErX3D/fk2jy+hvz+2dZv6Mm1ygVzsLhWvaNLLLAdOCmonCVqPQFf1n0uj68lv38xrkNHHOyLOVhcq97RJRbYDpwUVM4StZ6AL+s+n8efI79/Na5DRxzsizlYXKve0SUW2A6cFFTOErWegC/rvpDHnye/fzOuQ0cc7Is5WFyr3tElFtgOnBRUzhK1noAv676Yx18gv383rkNHHOyLOVhcq97RJRbYDpwUVM4StZ6AL+u+lMdfJL//MK5DRxzsizlYXKve0SUW2A6cFFTOErWegC/rvpzHXyK//zSuQ0cc7Is5WFyr3tElFtgOnBRUzhK1noAv6/4rj79Mfl8xrkNHHOyLOVhcq97RJRbYDpzEtUXUevIVcvmqrcus7Pk12z3XyB5byR+5wj3S81+j3Lbaegzn1lcndq4p5ux3b10nx+zq1f+v2+6Z9tqxxzKq5ddVTbne/50fp+k4v8evc6jz/+S9uvzfdcpFuP/rwL2O8mMPsKboNWcsHT2umBidg4hJ59pwzNEYLHbZuoBcujG7hIldP8MDPb+Vjk2qtXI+HLzsnuevz8cnC/tcP7Hr6zj3bQ65M2eO5mAtJ4frF4DL1gXkMllwucHWZfgZ/Tcm7gmcKzeQB5y+QR7ftPUYrmvYA7XhmKPxN8nlRluX4XvtJts918oeN5M/coV7pOdvotxutvUYzr0bJ3auKebsd29dJ8fs6tX/b9nuefd1DWr5LVVTrvf/5cdpOn4D5XuLQ53/P++F65pblItwv+3ABQfXNfAAa4pec+lurmu2OdeGY47GYLHLzQvIpRuzy+6ua25RteLrGj4f+Lrm1nx8srDPrRO7vo5zv80hd+bM0Rwsvq65dQG43LyAXLYVXG63dRmua+6YuCdwrtxOHnC6gzzutPUYrmvYA7XhmKPxneTyHVuX4Xvtu7Z7rpY9tpM/coV7pOe/S7ltt/UYzr3vTOxcU8zZ79663j5mV6/+32W7593XNajlXaqmXO/v5cfp3dS56+zrjDcbrmvA+B5xJx244OC6Bh5gTdFrbroX1zUutaGYozFY7HLbAnLZvoBcujG77O4aC89vp2OTaq2cm4fRNdYUztHCPlPdrq/j3KcdcmfOHM3B4mssPDdOl+0LyOW2BeSyreDS27oM13tL6I1w9zlOHnBaQh5LjT065bGFuEuJu8yBu1RxcQ4sox4to/f4Fnai93fodl4nvtHBdzl9Dm0hh0jcFQ7n7F7qmgCM5fTdjNfsnT8f5ZrlIct2reN0dg+qjvLQq/yWqfNgil6zT957RYVV61lf6NmUUe1WP+eAdSesG/VsUuXdq+8HvvaB72ThNdM05n068je+Lpvt1P7sNk21nFAu8sDXrtxvzgnXvhP5NVgzQXvjO+Iueorvi7bQa/ga1fi+dKd7ELwPwGCfOxy44ODaGB5gTdFr1tL7ItBxvq7BPcQ2OqZ/7iDH8DPFO+kYrnVup2NTecw/V5rOY+yxNNdnyrg+w3ej8Z7sj+jUfI7G4Evpca27afOGjetOXn/0+nUndrTFtNpukrbh8RSVckkeT9Mx/jWChFN51ziUd80PobzThZL+oOXViua3LV1BcDKPp6kO/LpX51vhg/L8mFFdZjadsmHzzOzM83f877pTTtlw+voT953h5zbNnHraps0zmzav27h55qSNG06dWbUv73uJ0743Ou07kz/28sPEUS9cv/GkHfvwa9bs5jXfB2uW3bQXcQEA",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "init",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "oracle_address",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "loan_to_value",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "collateral_asset",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "stable_coin",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "repay_private",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "from",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "secret",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "on_behalf_of",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "stable_coin",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "repay_public",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "nonce",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "owner",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "stable_coin",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "update_accumulator",
            "functionType": "open",
            "isInternal": false,
            "parameters": [],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "withdraw_private",
            "functionType": "secret",
            "isInternal": false,
            "parameters": [
                {
                    "name": "secret",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [],
            "bytecode": "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",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        },
        {
            "name": "withdraw_public",
            "functionType": "open",
            "isInternal": false,
            "parameters": [
                {
                    "name": "to",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                },
                {
                    "name": "amount",
                    "type": {
                        "kind": "field"
                    },
                    "visibility": "private"
                }
            ],
            "returnTypes": [
                {
                    "kind": "struct",
                    "path": "aztec::abi::PublicCircuitPublicInputs",
                    "fields": [
                        {
                            "name": "call_context",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::CallContext",
                                "fields": [
                                    {
                                        "name": "msg_sender",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "storage_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "portal_contract_address",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "function_selector",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "is_delegate_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_static_call",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    },
                                    {
                                        "name": "is_contract_deployment",
                                        "type": {
                                            "kind": "boolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "args_hash",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "return_values",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "contract_storage_update_requests",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageUpdateRequest",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "old_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "new_value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "contract_storage_read",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "struct",
                                    "path": "aztec::abi::ContractStorageRead",
                                    "fields": [
                                        {
                                            "name": "storage_slot",
                                            "type": {
                                                "kind": "field"
                                            }
                                        },
                                        {
                                            "name": "value",
                                            "type": {
                                                "kind": "field"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "public_call_stack",
                            "type": {
                                "kind": "array",
                                "length": 4,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_commitments",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_nullifiers",
                            "type": {
                                "kind": "array",
                                "length": 16,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "new_l2_to_l1_msgs",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_logs_hash",
                            "type": {
                                "kind": "array",
                                "length": 2,
                                "type": {
                                    "kind": "field"
                                }
                            }
                        },
                        {
                            "name": "unencrypted_log_preimages_length",
                            "type": {
                                "kind": "field"
                            }
                        },
                        {
                            "name": "block_data",
                            "type": {
                                "kind": "struct",
                                "path": "aztec::abi::HistoricBlockData",
                                "fields": [
                                    {
                                        "name": "note_hash_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "nullifier_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "contract_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "l1_to_l2_messages_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "blocks_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "public_data_tree_root",
                                        "type": {
                                            "kind": "field"
                                        }
                                    },
                                    {
                                        "name": "global_variables_hash",
                                        "type": {
                                            "kind": "field"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "prover_address",
                            "type": {
                                "kind": "field"
                            }
                        }
                    ]
                }
            ],
            "bytecode": "",
            "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
        }
    ],
    "events": [],
    "debug": {
        "debugSymbols": [
            "",
            "",
            "",
            "",
            "eJztnNFu2yAUht/F11EFHOBAXmXaRbR1UqWqndbeVXn3pVsMEWUceTjnNMhXTSWMP/3Bnzkx5m16fP52eH14fnqZ9m8TTPsvb9PLz8PT+38vr4dfr9Ne7ab7p++nv8fd9OPh8X7a6+PuQysN4OK55elz0Kk1uFpza5Sdm1vjieYR3LlxDJCbxuPX3WRvEdoxQp/aJGiI4f+hfQ06RPTzEcpgE93GmcSpmFqGP53jNTsP1+w89nc+Z+5s2blWvb27AOemXtvL3pd9+VrXQKI281iMRkdi4KJ1aeCiz8McwnWvNm3Y2Ve76HRVygvZo0rswehL9vczVA268AyIrTNUdbfsDAFMOkM0hszf5bFjA5ZAVZVdFciHPCBQuRKoqj9JoKoyJYGqmhUEMlUzSwKtYOh1gVbQ7rpAK7h0XaAV1LsuEL+pCSB+U2O6G58+O1MC8ZuaAOI3NQHEb+o2EPCbmgDiNzUBxG9qAojf1AQQv6kJIH5TE0ACpg4+AQUFJZCAqdtAAqZuAwmYuglkBUzdBhIwdRtIwNRtIAFTt4EETN0GEjB1G4jd1M6o9AuUM7r8Ocaym5oCYjc1BcRuagLIsZuaAmI3NQXEbmoKiN3UFBC7qSkgdlNTQAKmdj4DoS2BBEzdBhIwdRtIwNRNIC9g6jaQgKnbQAKmbgMJmLoNJGDqNpCAqdtA/KYGk28dAKEE4jc1AcRvagKI39RtIOQ3NQHEb2oCiN/UBBC/qQkgflMTQPymJoDYTe2NT484PVysHzsDsZvag8EMFMp7GbKb2lutE5D98GgB2U3tg88JRVMmFNhN7aM1GSiWhWJgNzUqnZ4GocLyKgvspkYV0wQNdSzXoAV2U6NRaZ0umlCubAjspkYw+SsD8O3mHtK6UZe/XV9r6kDPHO40T879Ll3sGNhvFjeQCfv9amEmOPftL7RUzUSrmBf7aKVNOxWr9CxhqzB2RMh+h71ehFrnZzvaABCpBAMpltgTIfucYLwI2Wcxw0UY2edd40XIP1McLkL+ue1wEfLPxoeL8LPXDzcQ4WcvN24gwoGqE6kIt+qkO8KtOumOcKtOeiPUaitP+jPc6pP+DLcCpT/DkSoUSKmcPjsyFpjfnY9WqZ4MRypRpDIcqUaRynCkIkUqw5GqFKkMRypTpDIcqU4RyrC+qdSW4aIMR6pTpDIcqU6RynCrU/oz3OqU/gy3OqU/w61O6c9wq1P6M9zqlP4MR6pTMKbdNHXAnlj4d01cFovD+d0RtNCOpb1r613V5TrtxHr5srezf3dJvatedz69G4EXW/16cz6mOs6IY+oFIHVQteL590HH429PS8k0",
            "",
            "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
            "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",
            "",
            "eJzNmM1qwkAURt9l1qFk7tz581VKF9JaEERLdSd599qSSQMzNVMZbr6dgW+Sk8056lUdTq/by/50PKvNVfVPUW2er+r8sT1+X58v28+L2mhiHTq1O779fGYeOvW+P+xuV0OXrYO14zZENy09FabRpGkMZpqaOLx0NxbdI8FoJBhCgjFIMIwEY5FgHBKMR4IJSDBIBiYkAxOSgQnJwIRkYEIyMDUwcPQ6bXsK92lI2zQmQ/39lzRpGnh2WzOSN9D1SuQN3L4SeYMQrETeoBrrkJsGiVmJvEGPViJvEK+VyGtKZ/XdJ2hylMbGmPkz8rHxbtyy9tPU2RGnpnWCODW1E8SpSZggTk2XBHFqYiOIU1MQORyuyYIgTo3rBXFqBC6Ig2VlxrIyY1mZsazMWFZmLCszlpUtlpUtlpWttJWZTMJhmuMUvla7NA3+dxr8SC4t8Hbk0q5vRy6dhcfIQ5+TSxekHbl0bP5BHnuf/sjULieX7lI7cumENSN30rV7jJw4J5cOYzty4IZGjonchpwcuKEL5MANXSAHbuiM3BXcAtzQBXLkhsbptn2vc3TkiC6gI1f0ProvotMETtZmP6VCMb0LZ4rRWzhTzM3CmaLo/z4zDF/vumup",
            "eJzNlstqwzAQRf9Fa1M0M3o4/pXShWlTCASn1N4Z/XvTh00hGrwR0t1JcAcOaHyuV3O9vY7L5TbNZliNffJmeF7N/DFO3/d5GT8XMxCfHHXmPL39nCOnzrxfruf7LXWZdOAtLCJ7NkomLDH8ZR3FPRp8eunuNAGKJkLR9FA0Jygaslg4hIXDWDiCheOwcLCMTFhKJiwnE5aUqbaVHcuG4/g/zmOUaSNn9nu0519yri3wcuS1XV+OXKuF6HYYa22t5WWtFhrhaLXQCEerhUY4Wi00wtFqoRGOVguNcLRaaIMjmusb4WgCb4SDZWXBsrJgWVmwrCxYVhYsKwuWlQXLyg7Lyg7Lyq62lYv95bvaAi9HXtv1xchD9lti6rcZ7x82LGQX/mAmu5UHM9l9OJjJvoQ+k9IXSkEMqA==",
            "",
            "",
            "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",
            "",
            "",
            "eJztnE1u2zAQRu+itVFw+DdkrlJ0EbQpECBIiia7wHev0lqkwTAcqJRnYkKrKABFPX+SnjgWzdfp4en77cv90+PzdPM6menm6+v0/Ov28e2/55fb3y/TjTpMd48/5r/Hw/Tz/uFuuoHj4V0rMMbFU8t5O0BqbVytudXKLs2t9kTzaNypcQwmN43Hb4fJXiO0Y4Se2yRoE8P/Q/satI+JBhW00W1cSJyKqWX42zlesvNwyc5jf+dL5s6WnYPq7d0Fc2rqwZ73vu7kA9RAEGC5I3C+OYgLF61LFy76jG3CZe820Ozsm910UJXySvaoEnvQcM7+doSqQVceAbF1hKru1h0hGJ2OELUm83f52rEBS6Cqyi4K5EO+IFC5EqiqP0mgqjIlgaqaFQTSVTNLAm1g6G2BNtDutkAbuHRboA3Uuy0Qv6kJIH5TY3oaz9tOl0D8piaA+E1NAPGbug1k+E1NAPGbmgDiNzUBxG9qAojf1AQQv6kJIAFTB5+AgjIlkICp20ACpm4DCZi6CWQFTN0GEjB1G0jA1G0gAVO3gQRM3QYSMHUbiN3UTqv0DZTTUH4dY9lNTQGxm5oCYjc1AeTYTU0BsZuaAmI3NQXEbmoKiN3UFBC7qSkgAVM7n4HQlkACpm4DCZi6DSRg6iaQFzB1G0jA1G0gAVO3gQRM3QYSMHUbSMDUbSB+UxudHx3GhBKI39QEEL+pCSB+U7eBkN/UBBC/qQkgflMTQPymJoD4TU0A8ZuaAGI3tdc+veL05mz+2AmI3dTeaMxAoXyWIbupvQVIQPbdqwVkN7UPPicUdZlQYDe1j1ZnoFgWioHd1KggvQ1CheVdFthNjSqmARpCLOegBXZTzx2mebqoQzmzIbCbGo3Op8wY327uTZo36vLZ9bWmzsDC4eZxcu537WTHwP6wuIJM2J9XKzPBpW9/pqVqJqBinuwDCnQ7FatgkbBVGDsiZH/CXi5CgPxuB7QxRCpBmxRL7ImQfUwwXoTso5jhIozs467xIuQfKQ4XIf/YdrgI+Ufjw0X42euHK4jws5cbVxDhQNWJVIR7ddId4V6ddEe4Vye9EYLay5P+DPf6pD/DvUDpz3CkCsWkVOZtR8Zils8YrVI9GY5UokhlOFKNIpXhSEWKVIYjVSlSGY5UpkhlOFKdIpRhfVGpPcNVGY5Up0hlOFKdIpXhXqf0Z7jXKf0Z7nVKf4Z7ndKf4V6n9Ge41yn9GY5Up2BMq2lCwJ5Y+FdNXBeLw+W3I2hNO5b2qq1fqi6HtBLr+Y+9nf23SuqX+jrF6bcRqM/OlD7tU19+uL3PB6sKEztVK56Pdzoe/wCo5cId",
            ""
        ],
        "fileMap": {
            "1": {
                "source": "mod asset;\nmod interest_math;\nmod helpers;\nmod interfaces;\n\n// Single asset CDP contract.\n// Shoving re-entries up the ass.\n// TODO's:\n// - Use asset address instead of 0. We only use 0, as there is only one collateral asset :shrug:.\n// - Update accumulator should be for specific asset, just abusing only 1 asset atm.\n// - A way to repay all debt at once\n// - Liquidations\ncontract Lending {\n    use dep::safe_math::SafeU120;\n    use dep::std::option::Option;\n    use dep::aztec::{\n        context::{PrivateContext, PublicContext, Context},\n        selector::compute_selector,\n        state_vars::{\n            map::Map,\n            public_state::PublicState,\n        },\n        types::type_serialization::{\n            field_serialization::{FieldSerializationMethods, FIELD_SERIALIZED_LEN},\n            TypeSerializationInterface,\n        },\n    };\n    use crate::asset::{ASSET_SERIALIZED_LEN, Asset, AssetSerializationMethods};\n    use crate::interest_math::compute_multiplier;\n    use crate::helpers::{covered_by_collateral, DebtReturn, debt_updates, debt_value, compute_identifier};\n    use crate::interfaces::{Token, Lending, PriceFeed};\n\n    // Storage structure, containing all storage, and specifying what slots they use.\n    struct Storage {\n        collateral_asset: PublicState<Field, 1>,\n        stable_coin: PublicState<Field, 1>,\n        assets: Map<PublicState<Asset, ASSET_SERIALIZED_LEN>>,\n        collateral: Map<PublicState<Field, FIELD_SERIALIZED_LEN>>,\n        static_debt: Map<PublicState<Field, FIELD_SERIALIZED_LEN>>, // abusing keys very heavily\n    }\n\n    impl Storage {\n        fn init(context: Context) -> pub Self {\n            Storage {\n                collateral_asset: PublicState::new(\n                    context,\n                    1,\n                    FieldSerializationMethods,\n                ),\n                stable_coin: PublicState::new(\n                    context,\n                    2,\n                    FieldSerializationMethods,\n                ),\n                assets: Map::new(\n                    context,\n                    3,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            AssetSerializationMethods,\n                        )\n                    },\n                ),\n                collateral: Map::new(\n                    context,\n                    4,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            FieldSerializationMethods,\n                        )\n                    },\n                ),\n                static_debt: Map::new(\n                    context,\n                    5,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            FieldSerializationMethods,\n                        )\n                    },\n                ),\n            }\n        }\n    }\n\n    struct Position {\n        collateral: Field,\n        static_debt: Field,\n        debt: Field,\n    }\n\n    // Constructs the contract.\n    #[aztec(private)]\n    fn constructor(\n    ) {}\n\n    #[aztec(public)]\n    fn init(\n        oracle_address: Field,\n        loan_to_value: Field,\n        collateral_asset: Field,\n        stable_coin: Field,\n    ) -> Field {\n        \n        let asset_loc = storage.assets.at(0);\n        let asset = asset_loc.read();\n\n        assert (loan_to_value as u120 <= 10000);\n        assert (asset.last_updated_ts == 0);\n        assert (asset.interest_accumulator == 0);\n\n        asset_loc.write(Asset {\n            interest_accumulator: 1000000000,\n            last_updated_ts: context.timestamp() as u120,\n            loan_to_value: loan_to_value as u120,\n            oracle_address,\n        });\n\n        storage.collateral_asset.write(collateral_asset);\n        storage.stable_coin.write(stable_coin);\n\n        1\n    }\n\n    // Create a position.\n    #[aztec(public)]\n    fn update_accumulator() -> Asset {\n        \n\n        let asset_loc = storage.assets.at(0);\n        let mut asset = asset_loc.read();\n\n        let dt: SafeU120 = SafeU120{value: context.timestamp() as u120}.sub(SafeU120{value: asset.last_updated_ts});\n\n        // Only update if time has passed.\n        if (!dt.is_zero()) {\n            let precision: SafeU120 = SafeU120{value: 1000000000};\n            let rate_per_second: u120 = 1268391679; // 4% yearly rate / (60 * 60 * 24 * 365)\n            // if rate_per_second < sqrt(WAD) our approx is eq precision + rate * dt\n            let multiplier = compute_multiplier(rate_per_second, dt);\n\n            // accumulator *= multiplier, and multiplier >= 1\n            asset.interest_accumulator = SafeU120{value: asset.interest_accumulator}.mul_div(multiplier, precision).value;\n            asset.last_updated_ts = context.timestamp() as u120;\n\n            asset_loc.write(asset);\n        }\n\n        asset\n    }\n\n    #[aztec(private)]\n    fn deposit_private(\n        from: Field,\n        amount: Field,\n        nonce: Field,\n        secret: Field,\n        on_behalf_of: Field,\n        collateral_asset: Field,\n    ) {\n        let on_behalf_of = compute_identifier(secret, on_behalf_of, context.msg_sender());\n        let _res = Token::at(collateral_asset).unshield(&mut context, from, context.this_address(), amount, nonce);\n        // _deposit(on_behalf_of, amount, collateral_asset)\n        let selector = compute_selector(\"_deposit(Field,Field,Field)\");\n        let _callStackItem2 = context.call_public_function(context.this_address(), selector, [on_behalf_of, amount, collateral_asset]);\n    }\n\n    #[aztec(public)]\n    fn deposit_public(\n        amount: Field,\n        nonce: Field,\n        on_behalf_of: Field,\n        collateral_asset: Field,\n    ) -> Field {\n        Token::at(collateral_asset).transfer_public(context, context.msg_sender(), context.this_address(), amount, nonce);\n        let selector = compute_selector(\"_deposit(Field,Field,Field)\");\n        let return_values = context.call_public_function(context.this_address(), selector, [on_behalf_of, amount, collateral_asset]);\n        \n        return_values[0]\n    }\n\n    #[aztec(public)]\n    internal fn _deposit(\n        owner: Field,\n        amount: Field,\n        collateral_asset: Field,\n    ) -> Field {\n        let _asset = Lending::at(context.this_address()).update_accumulator(context);\n        \n\n        let coll_asset = storage.collateral_asset.read();\n        assert(coll_asset == collateral_asset);\n\n        let coll_loc = storage.collateral.at(owner);\n        let collateral = coll_loc.read();\n        coll_loc.write(collateral + amount);\n\n        1\n    }\n\n    #[aztec(private)]\n    fn withdraw_private(\n        secret: Field,\n        to: Field,\n        amount: Field\n    ) {\n        let on_behalf_of = compute_identifier(secret, 0, context.msg_sender());\n        let selector = compute_selector(\"_withdraw(Field,Field,Field)\");\n        let _callStackItem = context.call_public_function(context.this_address(), selector, [on_behalf_of, to, amount]);\n    }\n\n    #[aztec(public)]\n    fn withdraw_public(\n        to: Field,\n        amount: Field,\n    ) -> Field {\n        let selector = compute_selector(\"_withdraw(Field,Field,Field)\");\n        let return_values = context.call_public_function(context.this_address(), selector, [context.msg_sender(), to, amount]);\n\n        return_values[0]\n    }\n\n    #[aztec(public)]\n    internal fn _withdraw(\n        owner: Field,\n        recipient: Field,\n        amount: Field\n    ) -> Field {\n        let asset = Lending::at(context.this_address()).update_accumulator(context);\n        let price = PriceFeed::at(asset.oracle_address).get_price(context);\n        \n        \n\n        let coll_loc = storage.collateral.at(owner);\n        let collateral: Field = coll_loc.read();\n\n        let debt_loc = storage.static_debt.at(owner);\n        let static_debt: Field = debt_loc.read();\n\n        // debt_covered will revert if decrease would leave insufficient collateral to cover debt.\n        // or trying to remove more collateral than available\n        let debt_covered = covered_by_collateral(price, asset.loan_to_value, collateral as u120, 0, amount as u120);\n        let debt_returns = debt_updates(asset.interest_accumulator, static_debt as u120, 0, 0);\n\n        assert (debt_returns.debt_value < debt_covered);\n\n        coll_loc.write(collateral - amount);\n\n        // @todo @LHerskind Support both shielding and transfers (for now just transfer)\n        let collateral_asset = storage.collateral_asset.read();\n        Token::at(collateral_asset).transfer_public(context, context.this_address(), recipient, amount, 0);\n\n        1\n    }\n\n    #[aztec(private)]\n    fn borrow_private(\n        secret: Field,\n        to: Field,\n        amount: Field\n    ) {\n        let on_behalf_of = compute_identifier(secret, 0, context.msg_sender());\n        let selector = compute_selector(\"_borrow(Field,Field,Field)\");\n        let _callStackItem = context.call_public_function(context.this_address(), selector, [on_behalf_of, to, amount]);\n    }\n\n    #[aztec(public)]\n    fn borrow_public(\n        to: Field,\n        amount: Field\n    ) -> Field {\n        let selector = compute_selector(\"_borrow(Field,Field,Field)\");\n        let return_values = context.call_public_function(context.this_address(), selector, [context.msg_sender(), to, amount]);\n        \n        return_values[0]\n    }\n\n    #[aztec(public)]\n    internal fn _borrow(\n        owner: Field,\n        to: Field,\n        amount: Field\n    ) -> Field {\n        let asset = Lending::at(context.this_address()).update_accumulator(context);\n        let price = PriceFeed::at(asset.oracle_address).get_price(context);\n        \n        \n\n        // Fetch collateral and static_debt, compute health of current position\n        let collateral = storage.collateral.at(owner).read() as u120;\n        let static_debt = storage.static_debt.at(owner).read() as u120;\n\n        let debt_covered = covered_by_collateral(price, asset.loan_to_value, collateral, 0, 0);\n        let debt_returns = debt_updates(asset.interest_accumulator, static_debt, amount as u120, 0);\n\n        assert (debt_returns.debt_value < debt_covered);\n\n        storage.static_debt.at(owner).write(debt_returns.static_debt as Field);\n\n        // @todo @LHerskind Need to support both private and public minting.\n        let stable_coin = storage.stable_coin.read();\n        Token::at(stable_coin).mint_public(context, to, amount);\n\n        1\n    }\n\n    #[aztec(private)]\n    fn repay_private(\n        from: Field,\n        amount: Field,\n        nonce: Field,\n        secret: Field,\n        on_behalf_of: Field,\n        stable_coin: Field,\n    ) {\n        let on_behalf_of = compute_identifier(secret, on_behalf_of, context.msg_sender());\n        let _res = Token::at(stable_coin).burn(&mut context, from, amount, nonce);\n        let selector = compute_selector(\"_repay(Field,Field,Field)\");\n        let _callStackItem = context.call_public_function(context.this_address(), selector, [on_behalf_of, amount, stable_coin]);\n    }\n\n    #[aztec(public)]\n    fn repay_public(\n        amount: Field,\n        nonce: Field,\n        owner: Field,\n        stable_coin: Field,\n    ) -> Field {\n        Token::at(stable_coin).burn_public(context, context.msg_sender(), amount, nonce);\n        let selector = compute_selector(\"_repay(Field,Field,Field)\");\n        let return_values = context.call_public_function(context.this_address(), selector, [owner, amount, stable_coin]);\n        \n        return_values[0]\n    }\n\n    #[aztec(public)]\n    internal fn _repay(\n        owner: Field,\n        amount: Field,\n        stable_coin: Field,\n    ) {\n        let asset = Lending::at(context.this_address()).update_accumulator(context);\n        \n\n        // To ensure that private is using the correct token.\n        assert(stable_coin == storage.stable_coin.read());\n\n        let static_debt = storage.static_debt.at(owner).read() as u120;\n        let debt_returns = debt_updates(asset.interest_accumulator, static_debt, 0, amount as u120);\n\n        storage.static_debt.at(owner).write(debt_returns.static_debt as Field);\n        \n        1\n    }\n\n    unconstrained fn get_asset(\n        assetId: Field,\n    ) -> Asset {\n        \n        storage.assets.at(assetId).read()\n    }\n\n    unconstrained fn get_position(\n        owner: Field,\n    ) -> Position {\n        \n        let collateral = storage.collateral.at(owner).read();\n        let static_debt = storage.static_debt.at(owner).read();\n        let asset = storage.assets.at(0).read();\n        let debt = debt_value(static_debt as u120, asset.interest_accumulator as u120) as Field;\n        Position {collateral, static_debt, debt}\n    }\n\n    unconstrained fn get_assets() -> [Field; 2] {\n        \n        [storage.collateral_asset.read(), storage.stable_coin.read()]\n    }\n}\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/main.nr"
            },
            "32": {
                "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n",
                "path": "std/option.nr"
            },
            "35": {
                "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/abi.nr"
            },
            "38": {
                "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    blocks_tree_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/context.nr"
            },
            "39": {
                "source": "use dep::std::hash::{pedersen_hash_with_separator, sha256};\nuse crate::constants_gen::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n  let sha256_hashed = sha256(bytes_to_hash);\n\n  // Convert it to a field element\n  let mut v = 1;\n  let mut high = 0 as Field;\n  let mut low = 0 as Field;\n\n  for i in 0..16 {\n      high = high + (sha256_hashed[15 - i] as Field) * v;\n      low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n      v = v * 256;\n  }\n\n  // Abuse that a % p + b % p = (a + b) % p and that low < p\n  let hash_in_a_field = low + high * v;\n\n  hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n  // TODO(#1205) This is probably not the right index to use\n  pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n  pedersen_hash_with_separator(inputs, hash_index)\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/hash.nr"
            },
            "54": {
                "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/arguments.nr"
            },
            "55": {
                "source": "use crate::constants_gen::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: Field,\n    _function_selector: Field,\n    _args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: Field,\n    function_selector: Field,\n    args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n    )\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/call_private_function.nr"
            },
            "62": {
                "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/enqueue_public_function_call.nr"
            },
            "63": {
                "source": "use crate::constants_gen::RETURN_VALUES_LENGTH;\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/public_call.nr"
            },
            "65": {
                "source": "\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(\n    _storage_slot: Field,\n    _number_of_elements: Field,\n) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field)-> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(\n    storage_slot: Field,\n    deserialize: fn ([Field; N]) -> T,\n) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(\n    _storage_slot: Field,\n    _values: [Field; N],\n) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(\n    storage_slot: Field,\n    fields: [Field; N]\n) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/oracle/storage.nr"
            },
            "67": {
                "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse crate::constants_gen::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::hash::pedersen_hash;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/private_call_stack_item.nr"
            },
            "68": {
                "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/public_call_stack_item.nr"
            },
            "69": {
                "source": "use crate::utils::field_from_bytes;\n\nglobal SELECTOR_SIZE = 4;\n\npub fn compute_selector<N>(signature: str<N>) -> Field {\n    let bytes = signature.as_bytes();\n    let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n    \n    let mut selector_be_bytes = [0; SELECTOR_SIZE];\n    for i in 0..SELECTOR_SIZE {\n        selector_be_bytes[i] = hash[i];\n    }\n\n    field_from_bytes(selector_be_bytes, true)\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/selector.nr"
            },
            "72": {
                "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse crate::hash::pedersen_hash;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/state_vars/map.nr"
            },
            "73": {
                "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/state_vars/public_state.nr"
            },
            "79": {
                "source": "\nstruct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/types/vec.nr"
            },
            "82": {
                "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/types/type_serialization/field_serialization.nr"
            },
            "85": {
                "source": "pub fn arr_copy_slice<T, N, M>(\n    src: [T; N],\n    mut dst: [T; M],\n    offset: Field,\n) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}",
                "path": "/usr/src/yarn-project/aztec-nr/aztec/src/utils.nr"
            },
            "86": {
                "source": "struct SafeU120 {\n    value: u120,\n}\n\nimpl SafeU120 {\n    pub fn min() -> Self {\n        Self {\n            value: 0\n        }\n    }\n\n    pub fn max() -> Self {\n        Self {\n            value: 0xffffffffffffffffffffffffffffff\n        }\n    }\n\n    pub fn new(\n        value: Field,\n    ) -> Self {\n        // Check that it actually will fit. Spending a lot of constraints here :grimacing:\n        let bytes = value.to_be_bytes(32);\n        for i in 0..17 {\n            assert(bytes[i] == 0, \"Value too large for SafeU120\");\n        }\n        Self {\n            value: value as u120\n        }\n    }\n\n    pub fn is_zero(\n        self: Self,\n    ) -> bool {\n        self.value == 0\n    }\n\n    pub fn eq(\n        self: Self,\n        other: Self\n    ) -> bool {\n        self.value == other.value\n    }\n\n    pub fn lt(self: Self, other: Self) -> bool {\n        self.value < other.value\n    }\n\n    pub fn le(self: Self, other: Self) -> bool {\n        self.value <= other.value\n    }\n\n    pub fn gt(self: Self, other: Self) -> bool {\n        self.value > other.value\n    }\n\n    pub fn ge(self: Self, other: Self) -> bool {\n        self.value >= other.value\n    }\n\n    pub fn sub(\n      self: Self,\n      b: Self,\n    ) -> Self {\n        assert(self.value >= b.value, \"Underflow\");\n        Self {\n            value: self.value - b.value\n        }\n    }\n\n    pub fn add(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        let c: u120 = self.value + b.value;\n        assert(c >= self.value, \"Overflow\");\n        Self {\n            value: c\n        }\n    }\n\n    pub fn mul(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        let c: u120 = self.value * b.value;\n        if !b.is_zero() {\n            assert(c / b.value == self.value, \"Overflow\");\n        }\n        Self {\n            value: c\n        }\n    }\n\n    pub fn div(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        assert(!b.is_zero(), \"Divide by zero\");\n        Self {\n            value: self.value / b.value\n        }\n    }\n\n    pub fn mul_div(\n        self: Self,\n        b: Self,\n        divisor: Self\n    ) -> Self {\n        self.mul(b).div(divisor)\n    }\n\n    pub fn mul_div_up(\n        self: Self,\n        b: Self,\n        divisor: Self\n    ) -> Self {\n        let c = self.mul(b);\n        assert(!divisor.is_zero(), \"Divide by zero\");\n        let adder = ((self.value * b.value % divisor.value) as u120 > 0) as u120;\n        c.div(divisor).add(Self {value: adder})\n    }\n\n    // todo: implement mul_div with 240 bit intermediate values.\n}\n\n#[test]\nfn test_init() {\n    let a = SafeU120::new(1);\n    assert(a.value == 1);\n}\n\n#[test]\nfn test_init_max() {\n    let a = SafeU120::max();\n    assert(a.value == 0xffffffffffffffffffffffffffffff);\n}\n\n#[test]\nfn test_init_min() {\n    let a = SafeU120::min();\n    assert(a.value == 0);\n}\n\n#[test]\nfn test_is_zero() {\n    let a = SafeU120::min();\n    assert(a.value == 0);\n    assert(a.is_zero() == true);\n}\n\n#[test]\nfn test_eq() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(1);\n    assert(a.eq(b));\n}\n\n#[test]\nfn test_lt() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    assert(a.lt(b));\n    assert(b.lt(a) == false);\n}\n\n\n#[test]\nfn test_le() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(5);\n    assert(a.le(b));\n    assert(a.le(c));\n    assert(c.le(a) == false);\n}\n\n#[test]\nfn test_gt() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    assert(b.gt(a));\n    assert(a.gt(b) == false);\n}\n\n\n#[test]\nfn test_ge() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(5);\n    assert(a.ge(b));\n    assert(a.ge(c) == false);\n    assert(c.ge(a));\n}\n\n#[test(should_fail)]\nfn test_init_too_large() {\n    let b = SafeU120::max().value as Field + 1; // max + 1\n    let _a = SafeU120::new(b);\n}\n\n#[test]\nfn test_add() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    let c = SafeU120::add(a, b);\n    assert(c.value == 3);\n}\n\n#[test(should_fail)]\nfn test_add_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(1);\n    let _c = SafeU120::add(a, b);\n}\n\n#[test]\nfn test_sub() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(1);\n    let c = SafeU120::sub(a, b);\n    assert(c.value == 1);\n}\n\n#[test(should_fail)]\nfn test_sub_underflow() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    let _c = SafeU120::sub(a, b);\n}\n\n#[test]\nfn test_mul() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(3);\n    let c = SafeU120::mul(a, b);\n    assert(c.value == 6);\n}\n\n#[test(should_fail)]\nfn test_mul_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let _c = SafeU120::mul(a, b);\n}\n\n#[test]\nfn test_div() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::div(a, b);\n    assert(c.value == 2);\n}\n\n#[test(should_fail)]\nfn test_div_by_zero() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(0);\n    let _c = SafeU120::div(a, b);\n}\n\n#[test]\nfn test_mul_div() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(2);\n    let d = SafeU120::mul_div(a, b, c);\n    assert(d.value == 9);\n}\n\n#[test(should_fail)]\nfn test_mul_div_zero_divisor() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(0);\n    let _d = SafeU120::mul_div(a, b, c);\n}\n\n#[test(should_fail)]\nfn test_mul_div_ghost_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(4);\n    let _d = SafeU120::mul_div(a, b, c);\n}\n\n#[test]\nfn test_mul_div_up_rounding() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(5);\n    let d = SafeU120::mul_div_up(a, b, c);\n    assert(d.value == 4);\n}\n\n#[test]\nfn test_mul_div_up_non_rounding() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(2);\n    let d = SafeU120::mul_div_up(a, b, c);\n    assert(d.value == 9);\n}\n\n\n#[test(should_fail)]\nfn test_mul_div_up_ghost_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(9);\n    let _d = SafeU120::mul_div_up(a, b, c);\n}\n\n// It should not be possible for us to overflow `mul_div_up` through the adder, since that require the divisor to be 1\n// since we otherwise would not be at the max value. If divisor is 1, adder is 0.\n#[test(should_fail)]\nfn test_mul_div_up_zero_divisor() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(0);\n    let _d = SafeU120::mul_div_up(a, b, c);\n}\n",
                "path": "/usr/src/yarn-project/aztec-nr/safe-math/src/safe_u120.nr"
            },
            "87": {
                "source": "use dep::aztec::types::type_serialization::TypeSerializationInterface;\n\n// Struct to be used to represent \"totals\". Generally, there should be one per asset.\n// It stores the global values that are shared among all users, such as an accumulator\n// and last time it was updated.\n// In practice, it should also point to an oracle and have more fields related to\n// loan to value ratios and other things, but we did not have enough reads/writes for this.\nstruct Asset {\n    interest_accumulator: u120,\n    last_updated_ts: u120,\n    loan_to_value: u120,\n    oracle_address: Field,\n}\n\nglobal ASSET_SERIALIZED_LEN: Field = 4;\n\n// Right now we are wasting so many writes. If changing last_updated_ts\n// we will end up rewriting all of them, wasting writes.\nfn deserializeAsset(fields: [Field; ASSET_SERIALIZED_LEN]) -> Asset {\n    Asset {\n        interest_accumulator: fields[0] as u120,\n        last_updated_ts: fields[1] as u120,\n        loan_to_value: fields[2] as u120,\n        oracle_address: fields[3],\n    }\n}\n\nfn serializeAsset(asset: Asset) -> [Field; ASSET_SERIALIZED_LEN] {\n    [\n        asset.interest_accumulator as Field,\n        asset.last_updated_ts as Field,\n        asset.loan_to_value as Field,\n        asset.oracle_address,\n    ]\n}\n\nimpl Asset {\n    pub fn serialize(self: Self) -> [Field; ASSET_SERIALIZED_LEN] {\n        serializeAsset(self)\n    }\n}\n\nglobal AssetSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeAsset,\n    serialize: serializeAsset,\n};\n",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/asset.nr"
            },
            "88": {
                "source": "use dep::safe_math::SafeU120;\n\n// Binomial approximation of exponential\n// using lower than decired precisions for everything due to u120 limit\n// (1+x)^n = 1+n*x+[n/2*(n-1)]*x^2+[n/6*(n-1)*(n-2)*x^3]...\n// we are loosing around almost 8 digits of precision from yearly -> daily interest\n// dividing with 31536000 (seconds per year).\n// rate must be measured with higher precision than 10^9.\n// we use e18, and rates >= 4% yearly. Otherwise need more precision\npub fn compute_multiplier(\n    rate_per_second: u120,\n    dt: SafeU120,\n) -> SafeU120 {\n    let base = SafeU120{value: 1000000000}; // 1e9\n    let WAD = SafeU120{value: 1000000000000000000}; // 1e18\n    let diff = WAD.div(base);\n    let mut res = base;\n    if (!dt.is_zero()) {\n        let exp_minus_one = SafeU120{value: dt.value - 1};\n        let exp_minus_two = SafeU120 {value: if (dt.value > 2) {dt.value - 2} else { 0 }};\n\n        // if rate_per_second < sqrt(WAD), then base_power_two and base_power_three = 0\n        let rate = SafeU120 { value: rate_per_second };\n        let base_power_two = rate.mul_div(rate, WAD);\n        let base_power_three = base_power_two.mul_div(rate, WAD);\n\n        let temp = dt.mul(exp_minus_one);\n        let second_term = temp.mul(base_power_two).div(SafeU120 {value: 2});\n        let third_term = temp.mul(exp_minus_two).mul(base_power_three).div(SafeU120{value: 6});\n\n        // throwing away precision to keep us under u120 :sob:\n        let offset = dt.mul(rate).add(second_term).add(third_term).div(diff);\n\n        res = base.add(offset);\n    }\n    res\n}",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/interest_math.nr"
            },
            "89": {
                "source": "use crate::interest_math::compute_multiplier;\nuse dep::safe_math::SafeU120;\nuse dep::aztec::hash::pedersen_hash;\n\n// Utility used to easily get a \"id\" for a private user that sits in the same\n// \"space\" as the public users.\n// It help us to have a single mapping for collateral that have both public and private users.\npub fn compute_identifier(\n    secret: Field,\n    on_behalf_of: Field,\n    self: Field,\n) -> Field {\n    // EITHER secret OR on_behalf_of MUST be set. But not both\n    assert (!((secret == 0) as bool & (on_behalf_of == 0) as bool));\n    if (secret != 0) {\n        pedersen_hash([self, secret],0)\n    } else {\n        on_behalf_of\n    }\n}\n\npub fn covered_by_collateral(\n    price: u120,\n    loan_to_value: u120,\n    collateral: u120,\n    increase: u120,\n    decrease: u120,\n) -> u120 {\n    let price_precision = SafeU120{value: 1000000000};\n    let ltv_precision = SafeU120{value: 10000};\n\n    let price = SafeU120{value: price};\n    let collateral = SafeU120{value: collateral}.add(SafeU120{value:increase}).sub(SafeU120{value:decrease});\n    let loan_to_value = SafeU120{value: loan_to_value};\n\n    let collateral_value = collateral.mul_div(price, price_precision);\n    let debt_covered = collateral_value.mul_div(loan_to_value, ltv_precision);\n\n    debt_covered.value\n}\n\nstruct DebtReturn {\n    debt_value: u120,\n    static_debt: u120,\n}\n\npub fn debt_updates(\n    interest_accumulator: u120,\n    static_debt: u120,\n    increase: u120,\n    decrease: u120,\n) -> DebtReturn {\n    assert(interest_accumulator > 0);\n    let accumulator_precision = SafeU120{value: 1000000000};\n\n    let static_debt = SafeU120{value: static_debt};\n    let interest_accumulator = SafeU120{value: interest_accumulator};\n    let increase = SafeU120{value: increase};\n    let decrease = SafeU120{value: decrease};\n\n    let current_debt_value = static_debt.mul_div(interest_accumulator, accumulator_precision);\n    let new_debt_value = current_debt_value.add(increase).sub(decrease);\n\n    // static_debt_increase = amount / accumulator\n    // rounding up new debt.\n    let static_debt_increase = increase.mul_div_up(accumulator_precision, interest_accumulator);\n    // rounding down repayment.\n    let static_debt_decrease = decrease.mul_div(accumulator_precision, interest_accumulator);\n\n    // We need to allow repaying of the entire debt as well etc. This is very prone to failing\n    // if you try to repay exact due to time diff between sim and execution.\n    let new_static_debt = static_debt.add(static_debt_increase).sub(static_debt_decrease);\n\n    DebtReturn {\n        debt_value: new_debt_value.value,\n        static_debt: new_static_debt.value,\n    }\n}\n\npub fn debt_value(\n    static_debt: u120,\n    interest_accumulator: u120,\n) -> u120 {\n    let static_debt = SafeU120{value: static_debt};\n    let accumulator_precision = SafeU120{value: 1000000000};\n    let interest_accumulator = SafeU120{value: interest_accumulator};\n    static_debt.mul_div_up(interest_accumulator, accumulator_precision).value\n}",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/helpers.nr"
            },
            "90": {
                "source": "use dep::aztec::context::{\n    PrivateContext,\n    PublicContext\n};\n\nuse crate::asset::Asset;\nuse dep::aztec::constants_gen::RETURN_VALUES_LENGTH;\nuse dep::aztec::selector::compute_selector;\n\nstruct PriceFeed {\n  address: Field,\n}\n\nimpl PriceFeed {\n  pub fn at(address: Field) -> Self {\n    Self { address }\n  }\n\n  pub fn get_price(self: Self, context: PublicContext) -> u120 {\n    let return_values = context.call_public_function(\n      self.address, \n      compute_selector(\"get_price(Field)\"),\n      [0]\n    );\n\n    return_values[0] as u120\n  }\n}\n\nstruct Token {\n  address: Field,\n}\n\nimpl Token {\n  pub fn at(address: Field) -> Self {\n    Self { address }\n  }\n\n  pub fn transfer_public(self: Self, context: PublicContext, from: Field, to: Field, amount: Field, nonce: Field) {\n    let _transfer_return_values = context.call_public_function(\n      self.address,\n      compute_selector(\"transfer_public((Field),(Field),Field,Field)\"),\n      [from, to, amount, nonce]\n    );\n  }\n\n  pub fn mint_public(self: Self, context: PublicContext, to: Field, amount: Field) {\n    let _return_values = context.call_public_function(\n      self.address,\n      compute_selector(\"mint_public((Field),Field)\"),\n      [to, amount]\n    );\n  }\n\n  pub fn burn_public(self: Self, context: PublicContext, from: Field, amount: Field, nonce: Field){\n    let _return_values = context.call_public_function(\n      self.address,\n      compute_selector(\"burn_public((Field),Field,Field)\"),\n      [from, amount, nonce]\n    );\n  }\n\n  // Private\n  pub fn unshield(self: Self, context: &mut PrivateContext, from: Field, to: Field, amount: Field, nonce: Field) -> [Field; RETURN_VALUES_LENGTH] {\n    context.call_private_function(\n      self.address,\n      compute_selector(\"unshield((Field),(Field),Field,Field)\"),\n      [from, to, amount, nonce]\n    )\n  }\n\n  pub fn burn(self: Self, context: &mut PrivateContext, from: Field, amount: Field, nonce: Field) -> [Field; RETURN_VALUES_LENGTH] {\n    context.call_private_function(\n      self.address,\n      compute_selector(\"burn((Field),Field,Field)\"),\n      [from, amount, nonce]\n    )\n  }\n}\n\nstruct Lending {\n  address: Field,\n}\n\nimpl Lending {\n  pub fn at(address: Field) -> Self {\n    Self { address }\n  }\n\n  pub fn update_accumulator(self: Self, context: PublicContext) -> Asset {\n    let return_values = context.call_public_function_no_args(\n      self.address,\n      compute_selector(\"update_accumulator()\"),\n    );\n\n    Asset {\n      interest_accumulator: return_values[0] as u120,\n      last_updated_ts: return_values[1] as u120,\n      loan_to_value: return_values[2] as u120,\n      oracle_address: return_values[3],\n    }\n  }\n}",
                "path": "/usr/src/yarn-project/noir-contracts/src/contracts/lending_contract/src/interfaces.nr"
            }
        }
    }
}
